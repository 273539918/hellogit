[概念]
Kubernetes最大价值： 声明式API和控制器模式
Servless三个特征： 按使用计费、工作流驱动、高可扩展性
云原生本质： 敏感、可扩展、可复制，充分利用“云”能力，发挥“云”价值的最佳上云路径


[调度]
问题：Kubernetes默认调度器与Mesos的“两级”调度器，有什么异同呢？
答： Mesos的两级调度器的设计，是Mesos自己充当0层调度器（Layer 0），负责统一管理整个集群的资源情况，把可用资源以Resource
Offer的方式暴露出去；而上层的大数据框架（比如Spark，Flink）则充当1层调度器（Layer 1），它会负责根据Layer 0发来的Resource Offer
来决定把任务调度到某个具体的节点上。这样做的好处是：
1）上层大数据框架本身往往自己已经实现了调度逻辑，这样它就可以很方便地接入到Mesos里面
2）这样的设计，使得Mesos本身能够统一地对上层所有框架进行资源分配，资源利用率和调度效率就可以得到很好地保证了
相比之下，Kubernetes的默认调度器实际上无论从功能还是性能上都要简单很多。这也是为什么把Spark这样本身就具有调度能力的框架接
入到Kubernetes里面还是比较困难的。

